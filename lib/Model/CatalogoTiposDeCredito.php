<?php
/**
 * CatalogoTiposDeCredito
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Reporte de Crédito Consolidado Personas Morales
 *
 * <p>PI Reporte de Crédito Consolidado de Personas Morales. <br/><br><img src='https://developer.circulodecredito.com.mx/sites/default/files/2024-01/Logo-Swaggers.png' height='70' width='270'/></p><br/>
 *
 * OpenAPI spec version: 1.0.0
 * Contact: api@circulodecredito.com.mx
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.64
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace RCCPMV2\Simulacion\MX\Client\Model;

use \ArrayAccess;
use \RCCPMV2\Simulacion\MX\Client\ObjectSerializer;

/**
 * CatalogoTiposDeCredito Class Doc Comment
 *
 * @category Class
 * @description &lt;table&gt; &lt;thead&gt; &lt;tr&gt; &lt;th&gt;Clave&lt;/th&gt; &lt;th&gt;Descripción&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tr&gt; &lt;td&gt;1300&lt;/td&gt; &lt;td&gt; Arren puro&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;1301&lt;/td&gt; &lt;td&gt; Descuentos&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;1302&lt;/td&gt; &lt;td&gt; Quirog&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;1303&lt;/td&gt; &lt;td&gt; Colateral&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;1304&lt;/td&gt; &lt;td&gt; Prendar&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;1305&lt;/td&gt; &lt;td&gt; Simple&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;1306&lt;/td&gt; &lt;td&gt; P.g.u.i.&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;1307&lt;/td&gt; &lt;td&gt; Habilitación&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;1308&lt;/td&gt; &lt;td&gt; Refacc&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;1309&lt;/td&gt; &lt;td&gt; I.e.p.b.s.&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;1310&lt;/td&gt; &lt;td&gt; Vivienda&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;1311&lt;/td&gt; &lt;td&gt; O.c. Garantia inmob&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;1314&lt;/td&gt; &lt;td&gt; No disponible&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;1316&lt;/td&gt; &lt;td&gt; O.a.v.&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;1317&lt;/td&gt; &lt;td&gt; C.v.a.&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;1320&lt;/td&gt; &lt;td&gt; Arren vigente&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;1321&lt;/td&gt; &lt;td&gt; Arren sindicado&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;1322&lt;/td&gt; &lt;td&gt; Arrend&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;1323&lt;/td&gt; &lt;td&gt; Reestructurados&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;1324&lt;/td&gt; &lt;td&gt; Renovados&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;1327&lt;/td&gt; &lt;td&gt; Arr. Finan. sindicado&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;1340&lt;/td&gt; &lt;td&gt; Redescuento&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;1341&lt;/td&gt; &lt;td&gt; O. Redescuento&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;1342&lt;/td&gt; &lt;td&gt; Red. Reestructurados&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;1350&lt;/td&gt; &lt;td&gt; Prestamos c/fideicomisos garantía&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;1380&lt;/td&gt; &lt;td&gt; T. Cred. empresarial- corporativa&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;2303&lt;/td&gt; &lt;td&gt; Cartas De credito&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;3011&lt;/td&gt; &lt;td&gt; Factoraje c/rec&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;3012&lt;/td&gt; &lt;td&gt; Factoraje s/rec&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;3230&lt;/td&gt; &lt;td&gt; Ant.a.c.p.p.factoraje&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;3231&lt;/td&gt; &lt;td&gt; Arren vigente&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;6103&lt;/td&gt; &lt;td&gt; Adeudos por aval&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;6105&lt;/td&gt; &lt;td&gt; Cartas de créditos no dispuestas&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;6228&lt;/td&gt; &lt;td&gt; Fideicomisos planta productiva&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;6229&lt;/td&gt; &lt;td&gt; fideicomisos estados&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;6230&lt;/td&gt; &lt;td&gt; Fideicomisos vivienda&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;6240&lt;/td&gt; &lt;td&gt; Aba pasem Ii&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;6250&lt;/td&gt; &lt;td&gt; Tarjeta de servicio&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;6260&lt;/td&gt; &lt;td&gt; Crédito fiscal&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;6270&lt;/td&gt; &lt;td&gt; Crédito automotriz&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;6280&lt;/td&gt; &lt;td&gt; Línea de crédito&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;6290&lt;/td&gt; &lt;td&gt; Seguros&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;6291&lt;/td&gt; &lt;td&gt; Fianzas&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;6292&lt;/td&gt; &lt;td&gt; Fondos y fideicomisos&lt;/td&gt; &lt;/tr&gt; &lt;/table&gt;
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class CatalogoTiposDeCredito implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'CatalogoTiposDeCredito';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }



    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }

    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
