<?php
/**
 * RespuestaRCEV1
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Reporte de Crédito Consolidado Personas Morales
 *
 * <p>PI Reporte de Crédito Consolidado de Personas Morales. <br/><br><img src='https://developer.circulodecredito.com.mx/sites/default/files/2024-01/Logo-Swaggers.png' height='70' width='270'/></p><br/>
 *
 * OpenAPI spec version: 1.0.0
 * Contact: api@circulodecredito.com.mx
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.64
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace RCCPMV2\Simulacion\MX\Client\Model;

use \ArrayAccess;
use \RCCPMV2\Simulacion\MX\Client\ObjectSerializer;

/**
 * RespuestaRCEV1 Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class RespuestaRCEV1 implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'RespuestaRCEV1';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'folio_consulta' => 'string',
        'folio_otorgante' => 'string',
        'clave_retorno' => 'string',
        'clave_retorno_sic' => 'string',
        'fecha_consulta' => 'string',
        'persona' => '\Swagger\Client\Model\PersonaRespuesta',
        'claves_banxico' => '\Swagger\Client\Model\CatalogoClavesBanxico',
        'calificacion_cartera' => '\Swagger\Client\Model\RespuestaRCEV1CalificacionCartera[]',
        'clave_prevenciones' => '\Swagger\Client\Model\RespuestaRCEV1ClavePrevenciones[]',
        'consultas_institucionales' => '\Swagger\Client\Model\ConsultasInstitucionalesRCE',
        'declarativas' => '\Swagger\Client\Model\RespuestaRCCV2Declarativas[]',
        'accionistas' => '\Swagger\Client\Model\Accionistas',
        'avales' => '\Swagger\Client\Model\Avales',
        'credito' => '\Swagger\Client\Model\CreditosPM',
        'tipo_reporte' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'folio_consulta' => null,
        'folio_otorgante' => null,
        'clave_retorno' => null,
        'clave_retorno_sic' => null,
        'fecha_consulta' => null,
        'persona' => null,
        'claves_banxico' => null,
        'calificacion_cartera' => null,
        'clave_prevenciones' => null,
        'consultas_institucionales' => null,
        'declarativas' => null,
        'accionistas' => null,
        'avales' => null,
        'credito' => null,
        'tipo_reporte' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'folio_consulta' => 'folioConsulta',
        'folio_otorgante' => 'folioOtorgante',
        'clave_retorno' => 'claveRetorno',
        'clave_retorno_sic' => 'claveRetornoSIC',
        'fecha_consulta' => 'fechaConsulta',
        'persona' => 'persona',
        'claves_banxico' => 'clavesBanxico',
        'calificacion_cartera' => 'calificacionCartera',
        'clave_prevenciones' => 'clavePrevenciones',
        'consultas_institucionales' => 'consultasInstitucionales',
        'declarativas' => 'declarativas',
        'accionistas' => 'accionistas',
        'avales' => 'avales',
        'credito' => 'credito',
        'tipo_reporte' => 'tipoReporte'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'folio_consulta' => 'setFolioConsulta',
        'folio_otorgante' => 'setFolioOtorgante',
        'clave_retorno' => 'setClaveRetorno',
        'clave_retorno_sic' => 'setClaveRetornoSic',
        'fecha_consulta' => 'setFechaConsulta',
        'persona' => 'setPersona',
        'claves_banxico' => 'setClavesBanxico',
        'calificacion_cartera' => 'setCalificacionCartera',
        'clave_prevenciones' => 'setClavePrevenciones',
        'consultas_institucionales' => 'setConsultasInstitucionales',
        'declarativas' => 'setDeclarativas',
        'accionistas' => 'setAccionistas',
        'avales' => 'setAvales',
        'credito' => 'setCredito',
        'tipo_reporte' => 'setTipoReporte'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'folio_consulta' => 'getFolioConsulta',
        'folio_otorgante' => 'getFolioOtorgante',
        'clave_retorno' => 'getClaveRetorno',
        'clave_retorno_sic' => 'getClaveRetornoSic',
        'fecha_consulta' => 'getFechaConsulta',
        'persona' => 'getPersona',
        'claves_banxico' => 'getClavesBanxico',
        'calificacion_cartera' => 'getCalificacionCartera',
        'clave_prevenciones' => 'getClavePrevenciones',
        'consultas_institucionales' => 'getConsultasInstitucionales',
        'declarativas' => 'getDeclarativas',
        'accionistas' => 'getAccionistas',
        'avales' => 'getAvales',
        'credito' => 'getCredito',
        'tipo_reporte' => 'getTipoReporte'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }



    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['folio_consulta'] = isset($data['folio_consulta']) ? $data['folio_consulta'] : null;
        $this->container['folio_otorgante'] = isset($data['folio_otorgante']) ? $data['folio_otorgante'] : null;
        $this->container['clave_retorno'] = isset($data['clave_retorno']) ? $data['clave_retorno'] : null;
        $this->container['clave_retorno_sic'] = isset($data['clave_retorno_sic']) ? $data['clave_retorno_sic'] : null;
        $this->container['fecha_consulta'] = isset($data['fecha_consulta']) ? $data['fecha_consulta'] : null;
        $this->container['persona'] = isset($data['persona']) ? $data['persona'] : null;
        $this->container['claves_banxico'] = isset($data['claves_banxico']) ? $data['claves_banxico'] : null;
        $this->container['calificacion_cartera'] = isset($data['calificacion_cartera']) ? $data['calificacion_cartera'] : null;
        $this->container['clave_prevenciones'] = isset($data['clave_prevenciones']) ? $data['clave_prevenciones'] : null;
        $this->container['consultas_institucionales'] = isset($data['consultas_institucionales']) ? $data['consultas_institucionales'] : null;
        $this->container['declarativas'] = isset($data['declarativas']) ? $data['declarativas'] : null;
        $this->container['accionistas'] = isset($data['accionistas']) ? $data['accionistas'] : null;
        $this->container['avales'] = isset($data['avales']) ? $data['avales'] : null;
        $this->container['credito'] = isset($data['credito']) ? $data['credito'] : null;
        $this->container['tipo_reporte'] = isset($data['tipo_reporte']) ? $data['tipo_reporte'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets folio_consulta
     *
     * @return string
     */
    public function getFolioConsulta()
    {
        return $this->container['folio_consulta'];
    }

    /**
     * Sets folio_consulta
     *
     * @param string $folio_consulta Número de folio de transacción asignado por Círculo de Crédito
     *
     * @return $this
     */
    public function setFolioConsulta($folio_consulta)
    {
        $this->container['folio_consulta'] = $folio_consulta;

        return $this;
    }

    /**
     * Gets folio_otorgante
     *
     * @return string
     */
    public function getFolioOtorgante()
    {
        return $this->container['folio_otorgante'];
    }

    /**
     * Sets folio_otorgante
     *
     * @param string $folio_otorgante Identificador de la consulta para verificaciones adicionales
     *
     * @return $this
     */
    public function setFolioOtorgante($folio_otorgante)
    {
        $this->container['folio_otorgante'] = $folio_otorgante;

        return $this;
    }

    /**
     * Gets clave_retorno
     *
     * @return string
     */
    public function getClaveRetorno()
    {
        return $this->container['clave_retorno'];
    }

    /**
     * Sets clave_retorno
     *
     * @param string $clave_retorno clave_retorno
     *
     * @return $this
     */
    public function setClaveRetorno($clave_retorno)
    {
        $this->container['clave_retorno'] = $clave_retorno;

        return $this;
    }

    /**
     * Gets clave_retorno_sic
     *
     * @return string
     */
    public function getClaveRetornoSic()
    {
        return $this->container['clave_retorno_sic'];
    }

    /**
     * Sets clave_retorno_sic
     *
     * @param string $clave_retorno_sic Clave de respuesta de otras SIC.
     *
     * @return $this
     */
    public function setClaveRetornoSic($clave_retorno_sic)
    {
        $this->container['clave_retorno_sic'] = $clave_retorno_sic;

        return $this;
    }

    /**
     * Gets fecha_consulta
     *
     * @return string
     */
    public function getFechaConsulta()
    {
        return $this->container['fecha_consulta'];
    }

    /**
     * Sets fecha_consulta
     *
     * @param string $fecha_consulta Fecha de la consulta
     *
     * @return $this
     */
    public function setFechaConsulta($fecha_consulta)
    {
        $this->container['fecha_consulta'] = $fecha_consulta;

        return $this;
    }

    /**
     * Gets persona
     *
     * @return \Swagger\Client\Model\PersonaRespuesta
     */
    public function getPersona()
    {
        return $this->container['persona'];
    }

    /**
     * Sets persona
     *
     * @param \Swagger\Client\Model\PersonaRespuesta $persona persona
     *
     * @return $this
     */
    public function setPersona($persona)
    {
        $this->container['persona'] = $persona;

        return $this;
    }

    /**
     * Gets claves_banxico
     *
     * @return \Swagger\Client\Model\CatalogoClavesBanxico
     */
    public function getClavesBanxico()
    {
        return $this->container['claves_banxico'];
    }

    /**
     * Sets claves_banxico
     *
     * @param \Swagger\Client\Model\CatalogoClavesBanxico $claves_banxico claves_banxico
     *
     * @return $this
     */
    public function setClavesBanxico($claves_banxico)
    {
        $this->container['claves_banxico'] = $claves_banxico;

        return $this;
    }

    /**
     * Gets calificacion_cartera
     *
     * @return \Swagger\Client\Model\RespuestaRCEV1CalificacionCartera[]
     */
    public function getCalificacionCartera()
    {
        return $this->container['calificacion_cartera'];
    }

    /**
     * Sets calificacion_cartera
     *
     * @param \Swagger\Client\Model\RespuestaRCEV1CalificacionCartera[] $calificacion_cartera Disposiciones de carácter general aplicables a las instituciones de crédito.
     *
     * @return $this
     */
    public function setCalificacionCartera($calificacion_cartera)
    {
        $this->container['calificacion_cartera'] = $calificacion_cartera;

        return $this;
    }

    /**
     * Gets clave_prevenciones
     *
     * @return \Swagger\Client\Model\RespuestaRCEV1ClavePrevenciones[]
     */
    public function getClavePrevenciones()
    {
        return $this->container['clave_prevenciones'];
    }

    /**
     * Sets clave_prevenciones
     *
     * @param \Swagger\Client\Model\RespuestaRCEV1ClavePrevenciones[] $clave_prevenciones clave_prevenciones
     *
     * @return $this
     */
    public function setClavePrevenciones($clave_prevenciones)
    {
        $this->container['clave_prevenciones'] = $clave_prevenciones;

        return $this;
    }

    /**
     * Gets consultas_institucionales
     *
     * @return \Swagger\Client\Model\ConsultasInstitucionalesRCE
     */
    public function getConsultasInstitucionales()
    {
        return $this->container['consultas_institucionales'];
    }

    /**
     * Sets consultas_institucionales
     *
     * @param \Swagger\Client\Model\ConsultasInstitucionalesRCE $consultas_institucionales consultas_institucionales
     *
     * @return $this
     */
    public function setConsultasInstitucionales($consultas_institucionales)
    {
        $this->container['consultas_institucionales'] = $consultas_institucionales;

        return $this;
    }

    /**
     * Gets declarativas
     *
     * @return \Swagger\Client\Model\RespuestaRCCV2Declarativas[]
     */
    public function getDeclarativas()
    {
        return $this->container['declarativas'];
    }

    /**
     * Sets declarativas
     *
     * @param \Swagger\Client\Model\RespuestaRCCV2Declarativas[] $declarativas declarativas
     *
     * @return $this
     */
    public function setDeclarativas($declarativas)
    {
        $this->container['declarativas'] = $declarativas;

        return $this;
    }

    /**
     * Gets accionistas
     *
     * @return \Swagger\Client\Model\Accionistas
     */
    public function getAccionistas()
    {
        return $this->container['accionistas'];
    }

    /**
     * Sets accionistas
     *
     * @param \Swagger\Client\Model\Accionistas $accionistas accionistas
     *
     * @return $this
     */
    public function setAccionistas($accionistas)
    {
        $this->container['accionistas'] = $accionistas;

        return $this;
    }

    /**
     * Gets avales
     *
     * @return \Swagger\Client\Model\Avales
     */
    public function getAvales()
    {
        return $this->container['avales'];
    }

    /**
     * Sets avales
     *
     * @param \Swagger\Client\Model\Avales $avales avales
     *
     * @return $this
     */
    public function setAvales($avales)
    {
        $this->container['avales'] = $avales;

        return $this;
    }

    /**
     * Gets credito
     *
     * @return \Swagger\Client\Model\CreditosPM
     */
    public function getCredito()
    {
        return $this->container['credito'];
    }

    /**
     * Sets credito
     *
     * @param \Swagger\Client\Model\CreditosPM $credito credito
     *
     * @return $this
     */
    public function setCredito($credito)
    {
        $this->container['credito'] = $credito;

        return $this;
    }

    /**
     * Gets tipo_reporte
     *
     * @return string
     */
    public function getTipoReporte()
    {
        return $this->container['tipo_reporte'];
    }

    /**
     * Sets tipo_reporte
     *
     * @param string $tipo_reporte tipo_reporte
     *
     * @return $this
     */
    public function setTipoReporte($tipo_reporte)
    {
        $this->container['tipo_reporte'] = $tipo_reporte;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
